@using ELearningProject.Models
@model ELearningProject.Models.PuzzelTestViewModel
@{

    ViewBag.Title = "Puzzel English";
    Layout = "~/Views/Shared/_StudentLayout.cshtml";
}
<script>
    <link href="~/Content/NewPuzzleGame.css" rel="stylesheet" />
        <link rel="stylesheet" href="~/Content/NewPuzzleGame.css">
</script>
<div class="containerPuzzlegame">
    <div class="wrapper">
        <div class="content">
            <div class="infor">
                <div class="video">
                    <video src="" class='vd ' onended="rV()" autoplay="autoplay"></video>
                    <div class="control">
                        <button id='play'>Play</button>
                        <div id='speed'>
                            <span><img src="https://img.icons8.com/doodle/48/000000/man-in-headphones.png"></span>
                            <div class="bar">
                                <div class="tr" data-type='sl'></div>
                                <div class="tr active" data-type='nm'></div>
                                <div class="tr" data-type='f'></div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="boxB">
                    <div class="answer"></div>
                </div>
            </div>
        </div>
        <div class="question">

        </div>
    </div>
    <div class="result">

    </div>
    <div class="tb">
        <h1>Bạn đã hoàn thành bài test</h1>
        <button class='btn kq btn_inform_finishtest test__button btnPush edit__test'>Xem kết quả .</button>
    </div>
</div>


<script>
    $(function () {
        alert("abc");
    })
</script>
<script>
    var listText = @Html.Raw(Json.Encode(Model.Questions));
console.log(listText);
const vd = document.querySelector('.vd');
const vdr = document.querySelector('.vdr');
const result = document.querySelector('.result');
const questionBox = document.querySelector('.question');
    const img = document.querySelector('#speed img');
    var score = 0;

class UIController {
    addItemResult(arr) {
        //console.log(arr);
        SendScore();
        let it = `<ul>`;
        arr.forEach((item) => {
            if (item.ans.trim() == item.ansy.trim()) {
                console.log(item.ans, item.ansy);
                it += `<li>
                <video src="${item.video}" class="vdr"></video>
                <div class="result__inf">
                    <div class="an">${item.ans}</div>
                    <div class="result__inf-ans"><span>${item.ansy}</span> <img src="https://img.icons8.com/color/48/000000/checked-checkbox.png"></div>
               </div>
             </li>`;
            } else {
                it += `<li>
                <video src="${item.video}" class="vdr"></video>
                <div class="result__inf">
                    <div class="an">${item.ans}</div>
                    <div class="result__inf-y"><span>${item.ansy}</span><img src="https://img.icons8.com/color/48/000000/close-window.png"></div>
               </div>
             </li>`;
            }

        });
        it += `</ul>`;
        result.innerHTML = it;
        document.querySelector('.tb').classList.remove('ht');
        result.style.display = 'block';
    }
    displayTB() {
        document.querySelector('.tb').classList.add('ht');
    }
}
const ui = new UIController();
const yourResult = [];
var random = 0;
var newA = '';
function rQuestion() {
    if (random >= listText.length) {
        localStorage.setItem('ds', JSON.stringify(yourResult));
        let ind = result.offsetTop;
        window.scrollTo({ top: ind });
        ui.displayTB();
        return false;
    }
    var question = listText[random];
    newA = question.Answer.split(" ");
    newA = newA.sort();
    var ans = '';
    vd.setAttribute('src', question.Content);
    newA.forEach(item => {
        ans += `<div class="item">${item}</div>`;
    });

    questionBox.innerHTML = ans;
}
rQuestion();
var td = document.querySelectorAll('.tr');
const control = document.querySelector('.control');
const play = document.getElementById('play');
var answer = document.querySelector('.answer');
var check = 0;
var kq = '';
play.addEventListener('click', e => {
    playVideo();
});
function playVideo() {
    vd.play();
    control.style.display = 'none';
}
td.forEach((item) => {
    item.onclick = function () {
        if (item.getAttribute('data-type') == 'sl') {
            img.setAttribute('src', 'https://img.icons8.com/color/48/000000/snail.png');
            vd.playbackRate = 0.75;
            playVideo();
        }
        else if (item.getAttribute('data-type') == 'f') {
            img.setAttribute('src', 'https://img.icons8.com/color/48/000000/running-rabbit.png');
            vd.playbackRate = 1.5;
            playVideo();
        } else {
            img.setAttribute('src', 'https://img.icons8.com/doodle/48/000000/man-in-headphones.png');
            vd.playbackRate = 1;
            vd.play();
        }
        td.forEach((it) => {
            it.classList.remove('active');
        });
        this.classList.add('active');
    }
});
function reset() {
    var word = document.querySelectorAll('.word');
    var listItem = document.querySelectorAll('.item');
    listItem.forEach((e) => {
        e.classList.remove('rm');
    });
    console.log(listItem);
    word.forEach((e) => {
        answer.removeChild(e);
    });
}
function displayResult(word) {
    let checkAns = listText[random].Answer.split(' ');
    console.log(checkAns);
    console.log('hello');
    console.log(word, 'check word');
    for (var i = 0; i < word.length; i++) {
        if (checkAns[i] != word[i].textContent) {
            word[i].classList.add('er');
        }
    }
}
function saveResult(video, ans, ansy) {
    let exac = {
        'video': video,
        'ans': ans,
        'ansy': ansy
    }
    yourResult.push(exac);
    }

    function StudentScore(StudentId, TestId, Score) {
        this.StudentId = StudentId;
        this.TestId = TestId;
        this.Score = Score;
    }

    function displayResultAll(video, ans, any) {
        SendScore();
    let resultAll = `<li>
            <video src="${video}" class='vdr'></video>
            <div class="result__inf">
                <div class="result__inf-ans">${ans}</div>
                <div class="result__inf-y">${any}</div>
           </div>
         </li>`;
    result.appendChild(resultAll);
    }

    function SendScore() {
        console.log("Sending Score");
        $.ajax({
        url: '@Url.Action("SubmitScore", "Student")',
        type: "POST",
        dataType: "json",
        contentType: "application/json; charset=utf-8",
        data: JSON.stringify(new StudentScore(@Model.StudentId, @Model.TestId, score)),
        success: function (e) {
            console.log(e);
        }
    })
    }

questionBox.addEventListener('click', function (e) {
    if (e.target.className == 'item') {
        check++;
        let div = document.createElement('div');
        div.classList.add('word');
        div.textContent = e.target.textContent;
        answer.appendChild(div);
        e.target.classList.add('rm');
        if (check == newA.length) {
            var word = document.querySelectorAll('.word');
            word.forEach(function (item) {
                kq += item.textContent + ' ';
            });
            if (kq.trim() == listText[random].Answer) {
                console.log('Giỏi vcl');
                score += 1;
                saveResult(listText[random].Content, listText[random].Answer, kq);
                check = 0;
                kq = '';
                random++;
                reset();
                rQuestion();
            }
            else {
                console.log('Sai Rồi');
                saveResult(listText[random].Content, listText[random].Answer, kq);
                console.log(yourResult);
                displayResult(word);
                setTimeout(function () {
                    check = 0;
                    kq = '';
                    random++;
                    reset();
                    rQuestion();
                }, 1000);

            }
        }
    }
});

answer.addEventListener('click', function (e) {
    if (e.target.className == 'word') {
        let listItem = document.querySelectorAll('.item');
        check--;
        listItem.forEach(function (item) {
            if (item.textContent == e.target.textContent) {
                item.classList.remove('rm');
            }
        });
        answer.removeChild(e.target);
    }
    console.log(kq);
});

const xkq = document.querySelector('.kq');
xkq.onclick = () => {
    const lkq = JSON.parse(localStorage.getItem('ds'));
    ui.addItemResult(lkq);
}
function rV() {
    control.style.display = 'flex';
}
</script>
